name: CI

on:
  push:
    branches: main

  pull_request:
    branches: main

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        ruby: [ ruby-2.4, ruby-2.5, ruby-2.6, ruby-2.7, ruby-3.0, ruby-3.1, ruby-3.2, jruby-9.2.19, jruby-9.3.0, truffleruby ]
        os: [ ubuntu-latest, windows-latest ]
        exclude:
          - { ruby: truffleruby, os: windows-latest }

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}

      - uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: bundle-use-ruby-${{ matrix.os }}-${{ matrix.ruby }}-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: bundle-use-ruby-${{ matrix.os }}-${{ matrix.ruby }}-

      - name: bundle install
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - run: bundle exec rake compile spec

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.4
          bundler: 2.3.26

      - uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: bundle-use-ruby-lint-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: bundle-use-ruby-lint-

      - name: bundle install
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - run: bundle exec rake rubocop
- ad: Setup Go ortamı
  kullanımlar: action/setup-go@v4.0.1
  ile:
    # İndirmek (gerekirse) ve kullanmak için Go sürümü. Semver özelliklerini ve aralıklarını destekler.
    go-versiyonu: # isteğe bağlı
    # go.mod veya go.work dosyasının yolu.
    go-versiyon dosyası: # isteğe bağlı
    # Eylemin her zaman sürüm spesifikasyonunu karşılayan mevcut en son sürümü kontrol etmesini istiyorsanız bu seçeneği true olarak ayarlayın
    en son kontrol: # isteğe bağlı
    # Geçiş sürümlerinden düğüm dağıtımlarını çekmek için kullanılır. Bir varsayılan olduğu için, bu genellikle kullanıcı tarafından sağlanmaz. Bu eylemi github.com'da çalıştırırken, varsayılan değer yeterlidir. GHES üzerinde çalışırken, hız sınırlaması yaşıyorsanız github.com için kişisel bir erişim belirteci iletebilirsiniz.
    belirteç: # isteğe bağlı, varsayılan ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Önbelleğe almanın gerekli olup olmadığını belirtmek için kullanılır. Önbelleğe almayı etkinleştirmek istiyorsanız, true olarak ayarlayın.
    önbellek: # isteğe bağlı, varsayılan doğrudur
    # Bir bağımlılık dosyasının yolunu belirtmek için kullanılır - go.sum
    önbellek bağımlılığı yolu: # isteğe bağlı
    # Go kullanmak için hedef mimari. Örnekler: x86, x64. Varsayılan olarak sistem mimarisini kullanır.
    mimari: # isteğe bağlı
